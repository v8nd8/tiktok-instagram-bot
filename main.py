import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext, CallbackQueryHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = '7240087170:AAEYeJrZyYPleAX0pwTRPwmW3dwKbe5GIog'  # –¢–≤–æ–π —Ç–æ–∫–µ–Ω
CHANNEL = '@mirznan1'  # –¢–≤–æ–π –∫–∞–Ω–∞–ª (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å @)

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
def check_subscription(user_id: int, context: CallbackContext) -> bool:
    try:
        member = context.bot.get_chat_member(CHANNEL[1:], user_id)  # –£–±–∏—Ä–∞–µ–º @
        return member.status in ['member', 'administrator', 'creator']
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return False

# –ö–æ–º–∞–Ω–¥–∞ /start
def start(update: Update, context: CallbackContext):
    user = update.effective_user
    update.message.reply_text(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n"
        f"üì§ –ü—Ä–∏—Å—ã–ª–∞–π —Å—Å—ã–ª–∫—É –∏–∑ TikTok –∏–ª–∏ Instagram, –∏ —è —Å–∫–∞—á–∞—é –≤–∏–¥–µ–æ.\n"
        f"üì¢ –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª: {CHANNEL}"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
def handle_message(update: Update, context: CallbackContext):
    user_id = update.effective_user.id
    
    if not check_subscription(user_id, context):
        update.message.reply_text(
            "‚ö†Ô∏è –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞:",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url=f"https://t.me/{CHANNEL[1:]}")],
                [InlineKeyboardButton("‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="check_sub")]
            ])
        )
        return

    url
